"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[735],{1073:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api-reference/rootCheck","title":"\ud83e\ude93 Root Check","description":"The Malloc Security SDK offers a comprehensive root detection feature that checks for common indicators of a rooted device. This includes known rooting binaries, packages, superuser access, and modified security properties.","source":"@site/docs/api-reference/rootCheck.md","sourceDirName":"api-reference","slug":"/api-reference/rootCheck","permalink":"/sdk/api-reference/rootCheck","draft":false,"unlisted":false,"editUrl":"https://github.com/mallocsecurity/sdk/edit/website/docs/api-reference/rootCheck.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mallocSidebar","previous":{"title":"\ud83e\udde9 Initialization","permalink":"/sdk/api-reference/authentication"},"next":{"title":"\ud83c\udf10 URL Threat Detection","permalink":"/sdk/api-reference/checkURL"}}');var o=s(4848),c=s(8453);const r={},t="\ud83e\ude93 Root Check",a={},l=[{value:"Option 1: Asynchronous Usage",id:"option-1-asynchronous-usage",level:2},{value:"Java",id:"java",level:4},{value:"Option 2: Synchronous Usage",id:"option-2-synchronous-usage",level:2},{value:"Java",id:"java-1",level:4},{value:"\ud83d\udce6 Sample JSON Response",id:"-sample-json-response",level:2},{value:"Interpretation",id:"interpretation",level:2},{value:"\u2705 Best Practices",id:"-best-practices",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"-root-check",children:"\ud83e\ude93 Root Check"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.strong,{children:"Malloc Security SDK"})," offers a comprehensive root detection feature that checks for common indicators of a rooted device. This includes known rooting binaries, packages, superuser access, and modified security properties."]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"\u26a0\ufe0f\u26a0\ufe0f This function is not yet available in version 0.1.X"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"option-1-asynchronous-usage",children:"Option 1: Asynchronous Usage"}),"\n",(0,o.jsx)(n.h4,{id:"java",children:"Java"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"MallocSDK.rootCheckAsync(new MallocSDK.ScanFinishedCallback() {\n    @Override\n    public void onScanFinished(JSONObject rootCheckResults) {\n        // Use the rootCheckResults\n    }\n});\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"option-2-synchronous-usage",children:"Option 2: Synchronous Usage"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Do ",(0,o.jsx)(n.strong,{children:"not"})," call this on the main/UI thread."]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"java-1",children:"Java"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"ExecutorService executor = Executors.newSingleThreadExecutor();\nexecutor.execute(new Runnable() {\n    @Override\n    public void run() {\n        JSONObject rootCheckResults = MallocSDK.rootCheckSync();\n        // Use the rootCheckResults\n    }\n});\nexecutor.shutdown();\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-sample-json-response",children:"\ud83d\udce6 Sample JSON Response"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success",\n  "details": {\n    "rooted_flag": false,\n    "root_check_results": [\n      {\n        "issue_found": false,\n        "check_description": "Check for Device Rooting Apps"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check for Rooting Binaries"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check Improperly Released Packages"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check for Development Packages"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Detect Development Keys"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check for Dangerous Apps"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check Device Security Properties"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check Superuser Access"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check for Superuser APK"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check for Superuser binary"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check for embedded OS"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check for rooting frameworks"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check for reset device fingerprint properties"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Paths that should be read-only"\n      },\n      {\n        "issue_found": false,\n        "check_description": "Check for Man In the Middle Hooks"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"interpretation",children:"Interpretation"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"rooted_flag"}),": A high-level boolean flag indicating if the device appears to be rooted."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"root_check_results"}),": A list of all individual root checks performed, with their respective results and descriptions."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"issue_found"}),": A boolean indicating whether the check flagged something (true = suspicious, false = clean)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"check_description"}),": A short, readable explanation of what that check was about."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"status"})," field in the returned JSON indicates the result of the operation. Possible values include:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"success"})," \u2013 The operation completed successfully and the result contains valid data."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"failed_sdk_not_initialized"})," \u2013 The SDK was not initialized before the function was called. Ensure MallocSDK has been initialised."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"failed_access_forbidden"})," \u2013 The operation was blocked, possibly due to missing permissions or restricted access."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"failed_no_internet_connection"})," \u2013 The device has no active internet connection, which is required to perform the scan."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"error"})," \u2013 A general error occurred during the operation (e.g., unexpected exception or parsing failure)."]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["These status strings are defined as final constants in the ",(0,o.jsx)(n.a,{href:"/sdk/api-reference/mallocSdkResponseJson",children:"MallocSdkResponseJson"})," class."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-best-practices",children:"\u2705 Best Practices"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Always perform root checks ",(0,o.jsx)(n.strong,{children:"after SDK initialization"})," is completed."]}),"\n",(0,o.jsxs)(n.li,{children:["Use the ",(0,o.jsx)(n.strong,{children:"asynchronous"})," version for better UI performance."]}),"\n",(0,o.jsx)(n.li,{children:"Always check the status field before relying on other content within the JSON."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var i=s(6540);const o={},c=i.createContext(o);function r(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);