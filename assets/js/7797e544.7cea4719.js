"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[863],{7502:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"api-reference/scanApps","title":"\ud83d\udcf1 App Scanning","description":"The Malloc Security SDK includes a powerful App Scan feature to help detect potentially dangerous apps on the device. It performs:","source":"@site/docs/api-reference/scanApps.md","sourceDirName":"api-reference","slug":"/api-reference/scanApps","permalink":"/sdk/api-reference/scanApps","draft":false,"unlisted":false,"editUrl":"https://github.com/mallocsecurity/sdk/edit/website/docs/api-reference/scanApps.md","tags":[],"version":"current","frontMatter":{},"sidebar":"mallocSidebar","previous":{"title":"\ud83d\udd75\ufe0f Spyware Indicators Check","permalink":"/sdk/api-reference/scanForDeviceSpyware"},"next":{"title":"\ud83d\udcc2 File Scanning","permalink":"/sdk/api-reference/scanDownloadedFiles"}}');var i=s(4848),c=s(8453);const r={},t="\ud83d\udcf1 App Scanning",l={},p=[{value:"Execution Options",id:"execution-options",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Option 1: Per-App Async Scan (With Updates)",id:"option-1-per-app-async-scan-with-updates",level:2},{value:"Java",id:"java",level:3},{value:"Option 2: Async Scan (Final Result Only)",id:"option-2-async-scan-final-result-only",level:2},{value:"Java",id:"java-1",level:3},{value:"Option 3: Synchronous Scan",id:"option-3-synchronous-scan",level:2},{value:"Java",id:"java-2",level:3},{value:"\ud83d\udce6 Sample JSON Response",id:"-sample-json-response",level:2},{value:"Interpretation",id:"interpretation",level:2},{value:"\u2705 Best Practices",id:"-best-practices",level:2}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"-app-scanning",children:"\ud83d\udcf1 App Scanning"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Malloc Security SDK"})," includes a powerful App Scan feature to help detect potentially dangerous apps on the device. It performs:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Spyware app detection"}),"\n",(0,i.jsx)(n.li,{children:"Permission analysis (dangerous or privacy-invading permissions)"}),"\n",(0,i.jsx)(n.li,{children:"Accessibility services usage detection"}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"The scan can include system apps and apps without internet access based on the provided flags."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"execution-options",children:"Execution Options"}),"\n",(0,i.jsx)(n.p,{children:"This operation is offered in three versions:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Version"}),(0,i.jsx)(n.th,{children:"Callback Type"}),(0,i.jsx)(n.th,{children:"Notes"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scanAppsPerAppAsync(...)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"AppsScanningUpdatesCallback"})}),(0,i.jsx)(n.td,{children:"Provides granular scanning progress"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scanAppsAsync(...)"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"ScanFinishedCallback"})}),(0,i.jsx)(n.td,{children:"Returns final result after all apps are scanned"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"scanAppsPerScanSync(...)"})}),(0,i.jsx)(n.td,{children:"\u2014"}),(0,i.jsx)(n.td,{children:"Synchronous, must run off main thread"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(n.p,{children:"Both async and sync versions accept two boolean flags:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"include_system_apps"}),": whether to include system applications."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"include_apps_with_no_internet_access"}),": whether to include apps without internet access."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"option-1-per-app-async-scan-with-updates",children:"Option 1: Per-App Async Scan (With Updates)"}),"\n",(0,i.jsx)(n.p,{children:"Provides progress updates while scanning apps."}),"\n",(0,i.jsx)(n.h3,{id:"java",children:"Java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"MallocSDK.AppsScanningUpdatesCallback appsScanningUpdatesCallback = new MallocSDK.AppsScanningUpdatesCallback() {\n    @Override\n    public void onAppsToScanListReady(List<ApplicationInfo> apps_to_scan) {\n        // The apps_to_scan list contains a list of the ApplicationInfo of the apps to be scanned\n    }\n\n    @Override\n    public void onScanningAppUpdate(ApplicationInfo now_scanning_app) {\n        // The now_scanning_app is the app currently in scan\n    }\n\n    @Override\n    public void onScanProgressUpdate(ApplicationInfo now_scanning_app, int total_scanned, int total_to_scan) {\n        // The now_scanning_app is the app currently in scan\n        // The total_scanned is the total number of the scanned apps\n        // The total_to_scan is the total number of apps to scan\n    }\n\n    @Override\n    public void onScanFinished(JSONObject result) {\n        // use the result\n    }\n};\n\nMallocSDK.scanAppsPerAppAsync(appsScanningUpdatesCallback, false, false);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["ApplicationInfo API reference: ",(0,i.jsx)(n.a,{href:"https://developer.android.com/reference/android/content/pm/ApplicationInfo",children:"https://developer.android.com/reference/android/content/pm/ApplicationInfo"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"option-2-async-scan-final-result-only",children:"Option 2: Async Scan (Final Result Only)"}),"\n",(0,i.jsx)(n.h3,{id:"java-1",children:"Java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"MallocSDK.scanAppsAsync(new MallocSDK.ScanFinishedCallback() {\n    @Override\n    public void onScanFinished(JSONObject result) {\n        // use the result\n    }\n}, false, false);\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"option-3-synchronous-scan",children:"Option 3: Synchronous Scan"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Do ",(0,i.jsx)(n.strong,{children:"not"})," call on the main thread."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"java-2",children:"Java"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"executor.execute(new Runnable() {\n    @Override\n    public void run() {\n        JSONObject result = MallocSDK.scanAppsPerScanSync(false, false);\n        // use the result\n    }\n});\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-sample-json-response",children:"\ud83d\udce6 Sample JSON Response"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success",\n  "details": {\n    "spyware_apps": [\n      {\n        "package_name": "com.example.spyware1",\n        "spyware": true\n      },\n      {\n        "package_name": "com.example.spyware2",\n        "spyware": true\n      }\n    ],\n    "app_permissions": [\n      {\n        "package_name": "com.google.android.apps.weather",\n        "granted_permissions": "ACCESS_FINE_LOCATION, ACCESS_BACKGROUND_LOCATION, INTERNET, ACCESS_COARSE_LOCATION"\n      },\n      {\n        "package_name": "com.google.android.googlequicksearchbox",\n        "granted_permissions": "ACTIVITY_RECOGNITION, RECORD_AUDIO, READ_CALL_LOG, READ_CALENDAR, READ_SMS, ACCESS_BACKGROUND_LOCATION, SEND_SMS, CALL_PHONE, WRITE_CONTACTS, BLUETOOTH_CONNECT, INTERNET, GET_ACCOUNTS, CAMERA, ACCESS_COARSE_LOCATION, READ_PHONE_STATE, READ_CONTACTS, BLUETOOTH_SCAN, WRITE_CALENDAR"\n      }\n    ],\n    "packages_with_enabled_accessibility_services": [\n      "com.avast.android.mobilesecurity",\n      "com.celzero.bravedns"\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"interpretation",children:"Interpretation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"spyware_apps"}),": Identified packages flagged as known spyware."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"app_permissions"}),": A breakdown of dangerous permissions granted per app."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"packages_with_enabled_accessibility_services"}),": Apps using accessibility services, often abused by spyware or intrusive apps."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-best-practices",children:"\u2705 Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Run this scan after SDK initialization."}),"\n",(0,i.jsx)(n.li,{children:"Prefer the async versions for better performance and smoother UI experience."}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"scanAppsPerAppAsync"})," if you want fine-grained progress feedback."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var a=s(6540);const i={},c=a.createContext(i);function r(e){const n=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);